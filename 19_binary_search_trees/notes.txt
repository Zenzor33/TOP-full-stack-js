In a binary tree

- Each node can have up to two child nodes (a left and right child). 
- Each node is greater than every node in its left subtree.
- Each node is less than every node in its right subtree.
- Any node with no children is called a leaf node

Operations:
- Insert 
- Find 
- Delete 

Balanced binary search tree:

A BST is balanced if:
-  Height of left subtree and right subtree of root differ by at most 1.
- Root node is middle element of sorted array 

Algorithm:
1. Initilize start = 0, end = length of thearray - 1
2. mid = (start+end)/2
3. Create a tree node with mid as root (lets call it A)
4. Recursively do following steps:
4a. Caculate mid of left subarray and make it root of left subtree of A.
4b. Calculate mid of right subarray and make it root of subtree of A.

Base case is if start > end return null